name: Deploy AWS EC2
on:
  push:
    branches:
      - main

jobs:
  build:
    name: Build and Package
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.17
        uses: actions/setup-java@v1
        with:
          java-version: 1.17

      - name: chmod
        run: chmod -R +x ./.github

      - name: Build and Package Maven
        id: package
        run: mvn -Dmaven.test.skip=true clean install

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: Dev
    permissions:
      id-token: write
      contents: read
    steps:
      - uses: actions/checkout@v2
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID  }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_DEFAULT_REGION }}
      - name: Deploy on AWS EC2
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY  }}
          HOSTNAME: ${{ secrets.HOSTNAME  }}
          USER_NAME: ${{ secrets.USERNAME  }}
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          mkdir -p ~/.ssh/
          echo "$PRIVATE_KEY" > ~/.ssh/github-actions-key
          chmod 600 ~/.ssh/github-actions-key
          cat >>~/.ssh/config <<END
          Host ec2
            HostName $HOSTNAME
            User $USER_NAME
            IdentityFile ~/.ssh/github-actions-key
            StrictHostKeyChecking no
          END
      - name: Copy war file via ssh key
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.HOSTNAME }}
          username: ${{ secrets.USER_NAME }}
#          port: ${{ secrets.PORT }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          source: "/target/reservation-system-0.0.1-SNAPSHOT.war"
          target: "ec2-user"